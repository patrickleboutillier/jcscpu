package parts

/*
use strict
use Test::More
use RAM
use Data::Dumper


nb_ram_tests = 256
plan(tests => 3 + nb_ram_tests)


ba = NewBUS()
wsa = NewWIRE()
bio = NewBUS()
ws = NewWIRE()
we = NewWIRE()
RAM = NewRAM(ba, wsa, bio, ws, we, "System memory")
RAM.show("00000000") # coverage...

# First, setup an address on the MAR input bus and let it in the MAR 
addr1 = "10101010"
ba.GetPower(addr1)
wsa.GetPower(1)
wsa.GetPower(0)

# Then setup some data on the I/O bus and store it.
data1 = "00011110"
bio.GetPower(data1)
ws.GetPower(1)
ws.GetPower(0)

# Now if we turn on the e, we should get our data back on the bus.
we.GetPower(1)
is(bio.GetPower(), data1)
we.GetPower(0)

# Now, setup a different on the MAR input bus and let it in the MAR 
addr2 = "11101011"
ba.GetPower(addr2)
wsa.GetPower(1)
wsa.GetPower(0)

# Then setup some data on the I/O bus and store it.
data2 = "01111000"
bio.GetPower(data2)
ws.GetPower(1)
ws.GetPower(0)

# Now if we turn on the e, we should get our data back on the bus.
we.GetPower(1)
is(bio.GetPower(), data2)
we.GetPower(0)

# Now, get back the data from the first address 
ba.GetPower(addr1)
wsa.GetPower(1)
wsa.GetPower(0)

# Now if we tune on the e, we should get our data back on the bus.
we.GetPower(1)
is(bio.GetPower(), data1)
we.GetPower(0)

make_ram_test(1)

sub make_ram_test {
    random = shift

    @ts = map { int rand(255) } (1..nb_ram_tests)
    foreach t (@ts){
        addr = sprintf("%08b", t)
        ba.GetPower(addr)
        wsa.GetPower(1)
        wsa.GetPower(0)
        # Then setup some data on the I/O bus and store it.
        data = join('', scalar(reverse(addr)))
        bio.GetPower(data)
        ws.GetPower(1)
        ws.GetPower(0)
    }

    foreach t (@ts){
        addr = sprintf("%08b", t)
        ba.GetPower(addr)
        wsa.GetPower(1)
        wsa.GetPower(0)

        # Clear the IO bus before enabling.
        # In the final setup this will not be necessary as each instruction will start with a clean bus.
        bio.GetPower("00000000")

        # Now if we turn on the e, we should get our data back on the bus.
        we.GetPower(1)
        data = join('', scalar(reverse(addr)))
        is(bio.GetPower(), data)
        we.GetPower(0)
    }
}


*/
